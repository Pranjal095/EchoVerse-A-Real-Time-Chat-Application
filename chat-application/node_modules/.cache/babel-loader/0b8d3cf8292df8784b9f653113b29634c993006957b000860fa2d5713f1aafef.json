{"ast":null,"code":"var _jsxFileName = \"/home/spidey/EchoVerse/chat-application/src/Components/Body.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport './Body.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Body = ({\n  messages\n}, {\n  socket\n}) => {\n  _s();\n  //get the username using the current webpage url\n  const URL = window.location.href;\n  const username = URL.slice(URL.indexOf(\"loggedin\") + 9);\n  const navigate = useNavigate();\n  const leaveChat = () => {\n    socket.emit('leaveResponse', {\n      username: username\n    });\n    navigate(\"/\");\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"room-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hangout with Colleagues\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"leave-chat\",\n        onClick: leaveChat,\n        children: \"LEAVE CHAT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all-chats\",\n      children: messages.map(message => message[\"name\"] === username ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sender-name1\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sent\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message[\"text\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this)]\n      }, message[\"id\"], true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"sender-name2\",\n          children: message[\"name\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-received\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message[\"text\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, message[\"id\"], true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Body, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = Body;\nexport default Body;\nvar _c;\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","Body","messages","socket","_s","URL","window","location","href","username","slice","indexOf","navigate","leaveChat","emit","reload","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","message","_c","$RefreshReg$"],"sources":["/home/spidey/EchoVerse/chat-application/src/Components/Body.js"],"sourcesContent":["import React from \"react\";\nimport './Body.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst Body=({ messages },{ socket })=>{\n  //get the username using the current webpage url\n  const URL=window.location.href;\n  const username=URL.slice(URL.indexOf(\"loggedin\")+9);\n  const navigate=useNavigate();\n\n  const leaveChat=()=>{\n    socket.emit('leaveResponse',{ username: username });\n    navigate(\"/\");\n    window.location.reload();\n  }\n\n  return(\n    <div className='body-container'>\n      <header className='room-header'>\n          <p>Hangout with Colleagues</p>\n          <button className='leave-chat' onClick={leaveChat}>\n              LEAVE CHAT\n          </button>\n      </header>\n\n      <div className=\"all-chats\">\n\n        {messages.map((message=>message[\"name\"]===username ? (\n        <div className='chat-container' key={message[\"id\"]}>\n            <p className='sender-name1'>You</p>\n            <div className='message-sent'>\n                <p>{message[\"text\"]}</p>\n            </div>\n        </div>\n        ) : (\n          <div className='chat-container' key={message[\"id\"]}>\n            <p className=\"sender-name2\">{message[\"name\"]}</p>\n            <div className='message-received'>\n                <p>{message[\"text\"]}</p>\n            </div>\n        </div>\n        )))}\n      </div>\n    </div>\n  )\n}\n\nexport default Body;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}