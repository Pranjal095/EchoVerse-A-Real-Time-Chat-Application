{"ast":null,"code":"var _jsxFileName = \"/home/spidey/EchoVerse/chat-application/src/Components/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport \"./ChatRoom.css\";\nimport Sidebar2 from './Sidebar2.js';\nimport Body2 from './Body2.js';\nimport Footer from './Footer.js';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatRoom = ({\n  socket\n}) => {\n  _s();\n  //get the roomID using the current webpage url\n  const URL = window.location.href;\n  const roomID = URL.split(\"/\")[6];\n  const [messages, setMessages] = useState([]);\n  const [roomname, setRoomname] = useState(\"\");\n  useEffect(() => {\n    socket.on('joinResponse', data => {\n      setMessages(data[\"messages\"]);\n      setRoomname(data[\"roomname\"]);\n    }, [socket, messages]);\n  });\n  useEffect(() => {\n    socket.on('messageResponse', data => {\n      if (data[\"roomID\"] === roomID) {\n        //add a message only if roomID is a match\n        setMessages([...messages, data]);\n      }\n    });\n  }, [socket, messages, roomID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar2, {\n      socket: socket\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"parent-container\",\n      children: [/*#__PURE__*/_jsxDEV(Body2, {\n        messages: messages,\n        socket: socket,\n        roomname: roomname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"3a4XZusfbNgrOePlWq3Qu2+ULOk=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","Sidebar2","Body2","Footer","useState","useEffect","jsxDEV","_jsxDEV","ChatRoom","socket","_s","URL","window","location","href","roomID","split","messages","setMessages","roomname","setRoomname","on","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/spidey/EchoVerse/chat-application/src/Components/ChatRoom.js"],"sourcesContent":["import React from 'react';\nimport \"./ChatRoom.css\";\nimport Sidebar2 from './Sidebar2.js';\nimport Body2 from './Body2.js';\nimport Footer from './Footer.js';\nimport { useState,useEffect } from 'react';\n\nconst ChatRoom=({ socket })=>{\n  //get the roomID using the current webpage url\n  const URL=window.location.href;\n  const roomID=URL.split(\"/\")[6];\n\n  const [messages,setMessages]=useState([]);\n  const [roomname,setRoomname]=useState(\"\");\n\n  useEffect(()=>{\n    socket.on('joinResponse',(data)=>{\n      setMessages(data[\"messages\"]);\n      setRoomname(data[\"roomname\"]);\n    },[socket,messages])\n  });\n\n  useEffect(()=>{\n    socket.on('messageResponse',(data)=>{\n      if(data[\"roomID\"]===roomID){   //add a message only if roomID is a match\n        setMessages([...messages,data])\n      }\n    })\n  },[socket,messages,roomID])\n\n  return(\n    <div className='app-container'>\n        <Sidebar2 socket={ socket } />\n        <div className='parent-container'>\n          <Body2 messages={ messages } socket={ socket } roomname={ roomname }/>\n          <Footer socket={ socket } />\n        </div>\n    </div>\n  )\n}\n\nexport default ChatRoom;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,OAAOC,QAAQ,MAAM,eAAe;AACpC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,MAAM,MAAM,aAAa;AAChC,SAASC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAACA,CAAC;EAAEC;AAAO,CAAC,KAAG;EAAAC,EAAA;EAC3B;EACA,MAAMC,GAAG,GAACC,MAAM,CAACC,QAAQ,CAACC,IAAI;EAC9B,MAAMC,MAAM,GAACJ,GAAG,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAE9B,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAACd,QAAQ,CAAC,EAAE,CAAC;EACzC,MAAM,CAACe,QAAQ,EAACC,WAAW,CAAC,GAAChB,QAAQ,CAAC,EAAE,CAAC;EAEzCC,SAAS,CAAC,MAAI;IACZI,MAAM,CAACY,EAAE,CAAC,cAAc,EAAEC,IAAI,IAAG;MAC/BJ,WAAW,CAACI,IAAI,CAAC,UAAU,CAAC,CAAC;MAC7BF,WAAW,CAACE,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC,EAAC,CAACb,MAAM,EAACQ,QAAQ,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFZ,SAAS,CAAC,MAAI;IACZI,MAAM,CAACY,EAAE,CAAC,iBAAiB,EAAEC,IAAI,IAAG;MAClC,IAAGA,IAAI,CAAC,QAAQ,CAAC,KAAGP,MAAM,EAAC;QAAI;QAC7BG,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAACK,IAAI,CAAC,CAAC;MACjC;IACF,CAAC,CAAC;EACJ,CAAC,EAAC,CAACb,MAAM,EAACQ,QAAQ,EAACF,MAAM,CAAC,CAAC;EAE3B,oBACER,OAAA;IAAKgB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BjB,OAAA,CAACN,QAAQ;MAACQ,MAAM,EAAGA;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9BrB,OAAA;MAAKgB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BjB,OAAA,CAACL,KAAK;QAACe,QAAQ,EAAGA,QAAU;QAACR,MAAM,EAAGA,MAAQ;QAACU,QAAQ,EAAGA;MAAU;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtErB,OAAA,CAACJ,MAAM;QAACM,MAAM,EAAGA;MAAQ;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAlB,EAAA,CAhCKF,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AAkCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}